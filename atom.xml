<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>阿帅</title>
  
  
  <link href="https://jiang07shuai06.github.io/atom.xml" rel="self"/>
  
  <link href="https://jiang07shuai06.github.io/"/>
  <updated>2024-11-16T00:34:52.691Z</updated>
  <id>https://jiang07shuai06.github.io/</id>
  
  <author>
    <name>byte76</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>心灵鸡汤007</title>
    <link href="https://jiang07shuai06.github.io/2024/11/02/%E5%BF%83%E7%81%B5%E9%B8%A1%E6%B1%A4007/"/>
    <id>https://jiang07shuai06.github.io/2024/11/02/%E5%BF%83%E7%81%B5%E9%B8%A1%E6%B1%A4007/</id>
    <published>2024-11-02T05:22:32.000Z</published>
    <updated>2024-11-16T00:34:52.691Z</updated>
    
    <content type="html"><![CDATA[<p>最近很焦虑，总是担心一些没有发生的事情，做计划也老是往最坏的方向想，但是这两天晚上夜跑的时候突然就想通了，也没那么内耗了，想要分享记录下来：</p><p>现在的 “大学生活” 让我学会接受所有可能性，不再机械地活着，不再批判他人的选择和决定，</p><p>有人努力奋斗，我钦佩他不顾一切的勤奋</p><p>有人选择躺平，我羡慕她享受生活的自由</p><p>有人频繁约会，我觉得他的经历丰富多彩</p><p>有人追求纯爱，我祝他找到自我的第一选择</p><p>有人选择毕业就结婚，我希望他幸福</p><p>有女孩享受带大学四年单身自由，我欣赏她的独立</p><p>互联网上总是争吵 “大学” 的价值观，因为人总是习惯性地，把自我价值观强加给别人</p><p>然而有什么事只有一个答案呢？谁能说自己地选择更正确呢？所处的世界是一个多元化地，要学会接受 “不同”</p><p>🫡😶‍🌫️🥱😃😄⛷️💧💫🪸💯</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近很焦虑，总是担心一些没有发生的事情，做计划也老是往最坏的方向想，但是这两天晚上夜跑的时候突然就想通了，也没那么内耗了，想要分享记录下来：&lt;/p&gt;
&lt;p&gt;现在的 “大学生活” 让我学会接受所有可能性，不再机械地活着，不再批判他人的选择和决定，&lt;/p&gt;
&lt;p&gt;有人努力奋斗，</summary>
      
    
    
    
    <category term="生活感悟" scheme="https://jiang07shuai06.github.io/categories/%E7%94%9F%E6%B4%BB%E6%84%9F%E6%82%9F/"/>
    
    
    <category term="qwq" scheme="https://jiang07shuai06.github.io/tags/qwq/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github==&gt;个人博客</title>
    <link href="https://jiang07shuai06.github.io/2024/10/20/Hexo-Github-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://jiang07shuai06.github.io/2024/10/20/Hexo-Github-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2024-10-20T08:17:35.000Z</published>
    <updated>2024-12-22T04:26:23.989Z</updated>
    
    <content type="html"><![CDATA[<h3 id="这篇文章是对于使用-hexo-和-github-搭建个人博客的思路梳理"><a href="#这篇文章是对于使用-hexo-和-github-搭建个人博客的思路梳理" class="headerlink" title="这篇文章是对于使用 hexo 和 github 搭建个人博客的思路梳理"></a>这篇文章是对于使用 hexo 和 github 搭建个人博客的思路梳理</h3><h4 id="1、下载-node-js"><a href="#1、下载-node-js" class="headerlink" title="1、下载 node.js"></a>1、下载 node.js</h4><p><a class="link"   href="https://nodejs.org/zh-cn" >https://nodejs.org/zh-cn<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><h4 id="2、下载-git"><a href="#2、下载-git" class="headerlink" title="2、下载 git"></a>2、下载 git</h4><p><a class="link"   href="https://git-scm.com/downloads" >https://git-scm.com/downloads<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><p>验证是否下载成功，管理员运行 cmd 输入以下三条命令</p><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">git -v</span><br></pre></td></tr></table></figure></div><h4 id="3、下载-hexo"><a href="#3、下载-hexo" class="headerlink" title="3、下载 hexo"></a>3、下载 hexo</h4><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure></div><h4 id="4、搭建仓库"><a href="#4、搭建仓库" class="headerlink" title="4、搭建仓库"></a>4、搭建仓库</h4><p>名称格式：<code>仓库名称.github.io</code></p><p>勾选 Public</p><p>勾选 Add a README file</p><p>拉到下面点击 create 创建</p><h4 id="5、生成SSH-Keys"><a href="#5、生成SSH-Keys" class="headerlink" title="5、生成SSH Keys"></a>5、生成SSH Keys</h4><p>进入任意文件夹，右键空白处然后点Git bash here,输入</p><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;邮件地址&quot;</span></span><br></pre></td></tr></table></figure></div><p>然后敲4次Enter⌨️<br>然后进入C:\Users\用户名，在里面进入.ssh文件<br>用记事本打开里面的id_rsa.pub,全选复制里面的代码<br>然后打开github<br>进入用户设置，找到SSH keys<br>新建SSH keys，名称随意，在下面粘贴代码，<br>然后创建<br>测试是否成功<br>在git bash中输入</p><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></div><p>回车，然后再输入 yes</p><h4 id="6、本地部署"><a href="#6、本地部署" class="headerlink" title="6、本地部署"></a>6、本地部署</h4><p>在喜欢位置新建文件Blog，然后进入文件夹<br>右键空白处然后点 Git bash here，输入</p><div class="code-container" data-rel="Sh"><figure class="iseeu highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure></div><p>然后依次输入</p><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g<span class="comment"># 生成</span></span><br><span class="line">hexo s<span class="comment"># 预览</span></span><br></pre></td></tr></table></figure></div><p>（如果不成功的话就重复直到成功，因为国内与github连接不稳定）<br>现在就可以复制生成的链接进入浏览器看到我们生成的本地服务器了<br>然后回到命令行，ctrl+c 关闭</p><h4 id="7、上线博客"><a href="#7、上线博客" class="headerlink" title="7、上线博客"></a>7、上线博客</h4><p>进入之前的Blog文件夹，用记事本打开_config.yml<br>编辑 url 段落</p><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line">url: https://Jiang07Shuai06.github.io</span><br></pre></td></tr></table></figure></div><p>拉到最下面将deploy后面的全删掉，复制粘贴这段</p><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>: git</span><br><span class="line">repository: </span><br><span class="line">branch: main</span><br></pre></td></tr></table></figure></div><p>注意缩进格式：每行前面都有两个空格不要删，每个冒号后面都有个空格也不要删！<br>去 github 之前生成的仓库页面，点 code，复制 https链接<br>将其粘贴到我们记事本中的 repository：后面<br>然后保存退出<br>回到博客文件夹，git bash<br>安装自动部署发布工具</p><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></div><p>然后在Blog文件夹右键打开git bash，依次输入</p><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g<span class="comment"># 生成</span></span><br><span class="line">hexo d<span class="comment"># 上传</span></span><br></pre></td></tr></table></figure></div><blockquote><p>如果是第一次使用git的话会需要配置<br><code>git config --global user.email &quot;你的邮箱&quot;</code><br><code>git config --global user.name &quot;你的名字&quot;</code><br>配置完后再 hexo d 上传<br>在跳出来的窗口内进行登录<br>接下来我们就成功把本地内容上传到github了<br>上传成功以后，我们就算搭建好了！上自己的网址看看吧<br>网址是我们之前设的仓库名：<code>用户名.github.io</code></p></blockquote><p>文章参考🔗：<a class="link"   href="https://blog.fiveth.cc/p/bb32/#%E5%87%86%E5%A4%87%E5%B7%A5%E5%85%B7" >https://blog.fiveth.cc/p/bb32/#%E5%87%86%E5%A4%87%E5%B7%A5%E5%85%B7<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;这篇文章是对于使用-hexo-和-github-搭建个人博客的思路梳理&quot;&gt;&lt;a href=&quot;#这篇文章是对于使用-hexo-和-github-搭建个人博客的思路梳理&quot; class=&quot;headerlink&quot; title=&quot;这篇文章是对于使用 hexo 和 githu</summary>
      
    
    
    
    <category term="技术分享" scheme="https://jiang07shuai06.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="博客" scheme="https://jiang07shuai06.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="https://jiang07shuai06.github.io/2024/10/10/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>https://jiang07shuai06.github.io/2024/10/10/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2024-10-10T03:36:35.000Z</published>
    <updated>2024-10-26T02:33:57.502Z</updated>
    
    <content type="html"><![CDATA[<h5 id="1、锚点"><a href="#1、锚点" class="headerlink" title="1、锚点"></a>1、锚点</h5><p>^ 匹配字符串或行的开头<br>$ 匹配字符串或行的末尾<br>\b匹配单词的开头或末尾<br>\B匹配不在单词的开头或末尾的位置</p><h5 id="2、字符类"><a href="#2、字符类" class="headerlink" title="2、字符类"></a>2、字符类</h5><p>[abc] 字符集，匹配集合中的任意字符<br>[^abc]     反选字符集，匹配不在集合中的任意字符<br>[a-z]  匹配两个字符之间的任意字符，包括它们本身<br>.匹配除换行符之外的任意字符<br>\w 匹配字母、数字或下划线<br>\W           匹配除字母、数字或下划线之外的任意字符<br>\d 匹配所有数字<br>\D           匹配除数字外的任意字符<br>\s            匹配所有空白字符<br>\S           匹配除空白字符以外的任意字符</p><h5 id="3、量词与分支"><a href="#3、量词与分支" class="headerlink" title="3、量词与分支"></a>3、量词与分支</h5><p>‘+’      表达式匹配一个或多个<br>‘*’ 表达式匹配零个或多个<br>{n}       表达式匹配恰好出现 n 次的元素<br>{n,}表达h式匹配至少出现 n 次的元素<br>{n,m}表达式匹配 n 到 m 次的元素<br>?使用表达式可选<br>|类似于“或”，用于匹配多种符合条件的表达式之一</p><h5 id="4、零宽断言"><a href="#4、零宽断言" class="headerlink" title="4、零宽断言"></a>4、零宽断言</h5><p>(?&#x3D;)       正向先行断言<br>(?!)  负向先行断言<br>(?&lt;&#x3D;)     正向后行断言<br>(?&lt;!)      负向后行断言</p><h5 id="5、标志"><a href="#5、标志" class="headerlink" title="5、标志"></a>5、标志</h5><p>i使表达式忽略大小写<br>g确保表达式不会在检索到第一个匹配项时停止<br>m如果不启用，”^”和”$”只匹配整个字符串的开始和结束，而不会单独匹配每一行</p><h5 id="6、组和引用"><a href="#6、组和引用" class="headerlink" title="6、组和引用"></a>6、组和引用</h5><p>( )      使表达式分组<br>\1     引用表达式的分组<br>(?:)创建无法引用的分组</p><h5 id="扩展："><a href="#扩展：" class="headerlink" title="扩展："></a>扩展：</h5><ul><li>sed（流编辑器）中的模式空间和保存空间</li></ul><p>模式空间（Pattern Space）</p><p>  就像是一个临时的工作区。当 <code>sed</code> 处理一行文本时，会把这一行内容放到模式空间里。然后在这个模式空间中对这行文本进行各种操作，比如替换、删除、打印等。</p><p>保持空间（Hold Space）</p><p>  这是一个额外的存储区域。你可以把一些内容从模式空间复制到保持空间进行暂存，或者从保持空间把内容取回模式空间进行进一步处理。比如你在处理一个文件时，遇到一些特殊的行想先保存起来，等处理到后面的时候再拿出来用，就可以把这些行放到保持空间</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;1、锚点&quot;&gt;&lt;a href=&quot;#1、锚点&quot; class=&quot;headerlink&quot; title=&quot;1、锚点&quot;&gt;&lt;/a&gt;1、锚点&lt;/h5&gt;&lt;p&gt;^ 	匹配字符串或行的开头&lt;br&gt;$ 	匹配字符串或行的末尾&lt;br&gt;&#92;b	匹配单词的开头或末尾&lt;br&gt;&#92;B	匹配不在单词的开</summary>
      
    
    
    
    <category term="技术分享" scheme="https://jiang07shuai06.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="Shell" scheme="https://jiang07shuai06.github.io/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>天气预报自动推送</title>
    <link href="https://jiang07shuai06.github.io/2024/10/07/%E5%A4%A9%E6%B0%94%E9%A2%84%E6%8A%A5%E6%8E%A8%E9%80%81/"/>
    <id>https://jiang07shuai06.github.io/2024/10/07/%E5%A4%A9%E6%B0%94%E9%A2%84%E6%8A%A5%E6%8E%A8%E9%80%81/</id>
    <published>2024-10-07T09:29:17.000Z</published>
    <updated>2024-10-26T02:34:44.175Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、申请微信测试公众号（https-mp-weixin-qq-com-debug-cgi-bin-sandbox-t-sandbox-login）"><a href="#一、申请微信测试公众号（https-mp-weixin-qq-com-debug-cgi-bin-sandbox-t-sandbox-login）" class="headerlink" title="一、申请微信测试公众号（https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login）"></a>一、申请微信测试公众号（<a class="link"   href="https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login%EF%BC%89" >https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login）<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></h4><ol><li><p>获取到这四个值 appID, appSecret, openId, template_id</p></li><li><p>想让谁收消息，谁就用微信扫二维码，刷新页面后即出现在用户列表，获取微信号（openId）</p></li><li><p>新增测试模板获得  template_id（模板ID）</p><p> 天气模板：</p> <div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">今天：&#123;&#123;date.DATA&#125;&#125;</span><br><span class="line">地区：&#123;&#123;region.DATA&#125;&#125;</span><br><span class="line">天气：&#123;&#123;weather.DATA&#125;&#125;</span><br><span class="line">气温：&#123;&#123;temp.DATA&#125;&#125;</span><br><span class="line">风向：&#123;&#123;wind_dir.DATA&#125;&#125;</span><br><span class="line">对你说的话：&#123;&#123;today_note.DATA&#125;&#125;</span><br></pre></td></tr></table></figure></div><p> 课程表模板：</p> <div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">消息：&#123;&#123;message.DATA&#125;&#125;</span><br></pre></td></tr></table></figure></div></li></ol><hr><h4 id="二、配置代码"><a href="#二、配置代码" class="headerlink" title="二、配置代码"></a>二、配置代码</h4><ol><li><p>将上面获得的几个值填入代码这几行，启动即可</p> <div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">appID = &quot;&quot;</span><br><span class="line">appSecret = &quot;&quot;</span><br><span class="line">#收信人ID即 用户列表中的微信号，见上文</span><br><span class="line">openId = &quot;&quot;</span><br><span class="line"># 天气预报模板ID</span><br><span class="line">weather_template_id = &quot;&quot;</span><br><span class="line"># 时间表模板ID</span><br><span class="line">timetable_template_id = &quot;&quot;</span><br></pre></td></tr></table></figure></div></li><li><p>定时任务（根据需求进行修改这几行）</p> <div class="code-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">schedule.every().day.at(&quot;08:00&quot;).do(weather_report, &quot;北京&quot;)</span><br><span class="line"># schedule.every().monday.at(&quot;13:30&quot;).do(timetable, &quot;还有15分钟开始下午的课程&quot;)</span><br><span class="line">while True:</span><br><span class="line">   schedule.run_pending()</span><br><span class="line">   time.sleep(1)</span><br></pre></td></tr></table></figure></div></li><li><p>完成代码如下</p> <div class="code-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装依赖 pip3 install requests html5lib bs4 schedule</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> schedule</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从测试号信息获取</span></span><br><span class="line">appID = <span class="string">&quot;wx1c904b832908e3d7&quot;</span></span><br><span class="line">appSecret = <span class="string">&quot;024e7a99b9bd93e4ec2ba0e61cb99869&quot;</span></span><br><span class="line"><span class="comment">#收信人ID即 用户列表中的微信号，见上文</span></span><br><span class="line">openId = <span class="string">&quot;oLg156sEhzpHX3f6OKG6HaCTid9s&quot;</span></span><br><span class="line"><span class="comment"># 天气预报模板ID</span></span><br><span class="line">weather_template_id = <span class="string">&quot;T00eYDomN3GOBXOTqTYhX27Nqp-vCdDO2xHKAK1ElH8&quot;</span></span><br><span class="line"><span class="comment"># 时间表模板ID</span></span><br><span class="line">timetable_template_id = <span class="string">&quot;kg29LwRP6--uo6Xq3mm-aRyJFaF_Pe2SsnUjYq23YpA&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_weather</span>(<span class="params">my_city</span>):</span><br><span class="line">    urls = [<span class="string">&quot;http://www.weather.com.cn/textFC/hb.shtml&quot;</span>,</span><br><span class="line">            <span class="string">&quot;http://www.weather.com.cn/textFC/db.shtml&quot;</span>,</span><br><span class="line">            <span class="string">&quot;http://www.weather.com.cn/textFC/hd.shtml&quot;</span>,</span><br><span class="line">            <span class="string">&quot;http://www.weather.com.cn/textFC/hz.shtml&quot;</span>,</span><br><span class="line">            <span class="string">&quot;http://www.weather.com.cn/textFC/hn.shtml&quot;</span>,</span><br><span class="line">            <span class="string">&quot;http://www.weather.com.cn/textFC/xb.shtml&quot;</span>,</span><br><span class="line">            <span class="string">&quot;http://www.weather.com.cn/textFC/xn.shtml&quot;</span></span><br><span class="line">            ]</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">        resp = requests.get(url)</span><br><span class="line">        text = resp.content.decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">        soup = BeautifulSoup(text, <span class="string">&#x27;html5lib&#x27;</span>)</span><br><span class="line">        div_conMidtab = soup.find(<span class="string">&quot;div&quot;</span>, class_=<span class="string">&quot;conMidtab&quot;</span>)</span><br><span class="line">        tables = div_conMidtab.find_all(<span class="string">&quot;table&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> table <span class="keyword">in</span> tables:</span><br><span class="line">            trs = table.find_all(<span class="string">&quot;tr&quot;</span>)[<span class="number">2</span>:]</span><br><span class="line">            <span class="keyword">for</span> index, tr <span class="keyword">in</span> <span class="built_in">enumerate</span>(trs):</span><br><span class="line">                tds = tr.find_all(<span class="string">&quot;td&quot;</span>)</span><br><span class="line">                <span class="comment"># 这里倒着数，因为每个省会的td结构跟其他不一样</span></span><br><span class="line">                city_td = tds[-<span class="number">8</span>]</span><br><span class="line">                this_city = <span class="built_in">list</span>(city_td.stripped_strings)[<span class="number">0</span>]</span><br><span class="line">                <span class="keyword">if</span> this_city == my_city:</span><br><span class="line"></span><br><span class="line">                    high_temp_td = tds[-<span class="number">5</span>]</span><br><span class="line">                    low_temp_td = tds[-<span class="number">2</span>]</span><br><span class="line">                    weather_type_day_td = tds[-<span class="number">7</span>]</span><br><span class="line">                    weather_type_night_td = tds[-<span class="number">4</span>]</span><br><span class="line">                    wind_td_day = tds[-<span class="number">6</span>]</span><br><span class="line">                    wind_td_day_night = tds[-<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">                    high_temp = <span class="built_in">list</span>(high_temp_td.stripped_strings)[<span class="number">0</span>]</span><br><span class="line">                    low_temp = <span class="built_in">list</span>(low_temp_td.stripped_strings)[<span class="number">0</span>]</span><br><span class="line">                    weather_typ_day = <span class="built_in">list</span>(weather_type_day_td.stripped_strings)[<span class="number">0</span>]</span><br><span class="line">                    weather_type_night = <span class="built_in">list</span>(weather_type_night_td.stripped_strings)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">                    wind_day = <span class="built_in">list</span>(wind_td_day.stripped_strings)[<span class="number">0</span>] + <span class="built_in">list</span>(wind_td_day.stripped_strings)[<span class="number">1</span>]</span><br><span class="line">                    wind_night = <span class="built_in">list</span>(wind_td_day_night.stripped_strings)[<span class="number">0</span>] + <span class="built_in">list</span>(wind_td_day_night.stripped_strings)[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">                    <span class="comment"># 如果没有白天的数据就使用夜间的</span></span><br><span class="line">                    temp = <span class="string">f&quot;<span class="subst">&#123;low_temp&#125;</span>——<span class="subst">&#123;high_temp&#125;</span>摄氏度&quot;</span> <span class="keyword">if</span> high_temp != <span class="string">&quot;-&quot;</span> <span class="keyword">else</span> <span class="string">f&quot;<span class="subst">&#123;low_temp&#125;</span>摄氏度&quot;</span></span><br><span class="line">                    weather_typ = weather_typ_day <span class="keyword">if</span> weather_typ_day != <span class="string">&quot;-&quot;</span> <span class="keyword">else</span> weather_type_night</span><br><span class="line">                    wind = <span class="string">f&quot;<span class="subst">&#123;wind_day&#125;</span>&quot;</span> <span class="keyword">if</span> wind_day != <span class="string">&quot;--&quot;</span> <span class="keyword">else</span> <span class="string">f&quot;<span class="subst">&#123;wind_night&#125;</span>&quot;</span></span><br><span class="line">                    <span class="keyword">return</span> this_city, temp, weather_typ, wind</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_access_token</span>():</span><br><span class="line">    <span class="comment"># 获取access token的url</span></span><br><span class="line">    url = <span class="string">&#x27;https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=&#123;&#125;&amp;secret=&#123;&#125;&#x27;</span> \</span><br><span class="line">        .<span class="built_in">format</span>(appID.strip(), appSecret.strip())</span><br><span class="line">    response = requests.get(url).json()</span><br><span class="line">    <span class="built_in">print</span>(response)</span><br><span class="line">    access_token = response.get(<span class="string">&#x27;access_token&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> access_token</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_daily_love</span>():</span><br><span class="line">    <span class="comment"># 每日一句情话</span></span><br><span class="line">    url = <span class="string">&quot;https://api.lovelive.tools/api/SweetNothings/Serialization/Json&quot;</span></span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    all_dict = json.loads(r.text)</span><br><span class="line">    sentence = all_dict[<span class="string">&#x27;returnObj&#x27;</span>][<span class="number">0</span>]</span><br><span class="line">    daily_love = sentence</span><br><span class="line">    <span class="keyword">return</span> daily_love</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_weather</span>(<span class="params">access_token, weather</span>):</span><br><span class="line">    <span class="comment"># touser 就是 openID</span></span><br><span class="line">    <span class="comment"># template_id 就是模板ID</span></span><br><span class="line">    <span class="comment"># url 就是点击模板跳转的url</span></span><br><span class="line">    <span class="comment"># data就按这种格式写，time和text就是之前&#123;&#123;time.DATA&#125;&#125;中的那个time，value就是你要替换DATA的值</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> datetime</span><br><span class="line">    today = datetime.date.today()</span><br><span class="line">    today_str = today.strftime(<span class="string">&quot;%Y年%m月%d日&quot;</span>)</span><br><span class="line"></span><br><span class="line">    body = &#123;</span><br><span class="line">        <span class="string">&quot;touser&quot;</span>: openId.strip(),</span><br><span class="line">        <span class="string">&quot;template_id&quot;</span>: weather_template_id.strip(),</span><br><span class="line">        <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://weixin.qq.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;date&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;value&quot;</span>: today_str</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;region&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;value&quot;</span>: weather[<span class="number">0</span>]</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;weather&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;value&quot;</span>: weather[<span class="number">2</span>]</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;temp&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;value&quot;</span>: weather[<span class="number">1</span>]</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;wind_dir&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;value&quot;</span>: weather[<span class="number">3</span>]</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;today_note&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;value&quot;</span>: get_daily_love()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    url = <span class="string">&#x27;https://api.weixin.qq.com/cgi-bin/message/template/send?access_token=&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(access_token)</span><br><span class="line">    <span class="built_in">print</span>(requests.post(url, json.dumps(body)).text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_timetable</span>(<span class="params">access_token, message</span>):</span><br><span class="line">    body = &#123;</span><br><span class="line">        <span class="string">&quot;touser&quot;</span>: openId,</span><br><span class="line">        <span class="string">&quot;template_id&quot;</span>: timetable_template_id.strip(),</span><br><span class="line">        <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://weixin.qq.com&quot;</span>,</span><br><span class="line">        <span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;message&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;value&quot;</span>: message</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    url = <span class="string">&#x27;https://api.weixin.qq.com/cgi-bin/message/template/send?access_token=&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(access_token)</span><br><span class="line">    <span class="built_in">print</span>(requests.post(url, json.dumps(body)).text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">weather_report</span>(<span class="params">city</span>):</span><br><span class="line">    <span class="comment"># 1.获取access_token</span></span><br><span class="line">    access_token = get_access_token()</span><br><span class="line">    <span class="comment"># 2. 获取天气</span></span><br><span class="line">    weather = get_weather(city)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;天气信息： <span class="subst">&#123;weather&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="comment"># 3. 发送消息</span></span><br><span class="line">    send_weather(access_token, weather)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">timetable</span>(<span class="params">message</span>):</span><br><span class="line">    <span class="comment"># 1.获取access_token</span></span><br><span class="line">    access_token = get_access_token()</span><br><span class="line">    <span class="comment"># 3. 发送消息</span></span><br><span class="line">    send_timetable(access_token, message)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    weather_report(<span class="string">&quot;河北&quot;</span>)</span><br><span class="line">    <span class="comment"># timetable(&quot;第二教学楼十分钟后开始英语课&quot;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># schedule.every().day.at(&quot;08:00&quot;).do(weather_report, &quot;北京&quot;)</span></span><br><span class="line">    <span class="comment"># schedule.every().monday.at(&quot;13:30&quot;).do(timetable, &quot;还有15分钟开始下午的课程&quot;)</span></span><br><span class="line">    <span class="comment">#while True:</span></span><br><span class="line">    <span class="comment">#   schedule.run_pending()</span></span><br><span class="line">    <span class="comment">#   time.sleep(1)</span></span><br></pre></td></tr></table></figure></div></li></ol><p>原创文档链接：<a class="link"   href="https://www.bilibili.com/read/cv28928153/" >https://www.bilibili.com/read/cv28928153/<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p><p>原创视频链接：<br><a class="link"   href="https://www.bilibili.com/video/BV1Ng4y1r7EP/?spm_id_from=333.880.my_history.page.click&vd_source=576ff0210b33e8823a0a538d3f79f11f" >https://www.bilibili.com/video/BV1Ng4y1r7EP/?spm_id_from=333.880.my_history.page.click&amp;vd_source=576ff0210b33e8823a0a538d3f79f11f<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;一、申请微信测试公众号（https-mp-weixin-qq-com-debug-cgi-bin-sandbox-t-sandbox-login）&quot;&gt;&lt;a href=&quot;#一、申请微信测试公众号（https-mp-weixin-qq-com-debug-cgi-bi</summary>
      
    
    
    
    <category term="技术分享" scheme="https://jiang07shuai06.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="Python" scheme="https://jiang07shuai06.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>外星人入侵</title>
    <link href="https://jiang07shuai06.github.io/2024/10/04/%E5%A4%96%E6%98%9F%E4%BA%BA%E5%85%A5%E4%BE%B5/"/>
    <id>https://jiang07shuai06.github.io/2024/10/04/%E5%A4%96%E6%98%9F%E4%BA%BA%E5%85%A5%E4%BE%B5/</id>
    <published>2024-10-04T11:05:33.000Z</published>
    <updated>2024-10-26T02:30:49.441Z</updated>
    
    <content type="html"><![CDATA[<h4 id="遇到的问题及注意事项："><a href="#遇到的问题及注意事项：" class="headerlink" title="遇到的问题及注意事项："></a>遇到的问题及注意事项：</h4><ul><li><p>编写计分模块 <code>scoreborad.py</code> 时，变量引用错误，没搞清楚使用的是值传递还是引用传递</p><p>  参考链接  <a class="link"   href="https://blog.csdn.net/hohaizx/article/details/78427406" >https://blog.csdn.net/hohaizx/article/details/78427406<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p></li><li><p>飞船数量与设置模块 <code>settings.py</code> 中的飞船设置相关</p></li><li><p>外星人、子弹、飞船移动速度以及幅度与设置模块 <code>settings.py</code> 中的 <code>initialize_dynamic_settings</code> 函数设置相关</p></li></ul><h4 id="参考资料及源码："><a href="#参考资料及源码：" class="headerlink" title="参考资料及源码："></a>参考资料及源码：</h4><ol><li><p>参考书籍《Python编程——从入门到实践》</p></li><li><p>参考教程链接  <a class="link"   href="https://www.modb.pro/db/49581" >https://www.modb.pro/db/49581<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p></li><li><p>通过百度网盘分享的文件：alien_invasion_2.0.zip</p><p> 链接：<a class="link"   href="https://pan.baidu.com/s/1NTkG7Mk_5sw4uzQLVU8ieQ?pwd=byte" >https://pan.baidu.com/s/1NTkG7Mk_5sw4uzQLVU8ieQ?pwd=byte<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> </p><p> 提取码：byte</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;遇到的问题及注意事项：&quot;&gt;&lt;a href=&quot;#遇到的问题及注意事项：&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题及注意事项：&quot;&gt;&lt;/a&gt;遇到的问题及注意事项：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;编写计分模块 &lt;code&gt;scoreborad.p</summary>
      
    
    
    
    <category term="技术分享" scheme="https://jiang07shuai06.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="Python" scheme="https://jiang07shuai06.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>示例文章</title>
    <link href="https://jiang07shuai06.github.io/2024/08/31/test/"/>
    <id>https://jiang07shuai06.github.io/2024/08/31/test/</id>
    <published>2024-08-31T01:00:00.000Z</published>
    <updated>2024-12-22T04:32:35.541Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="77757203f5db5a22f775eac1d250805f0f476da4ec6fab2559940acb4ccba7fc">5844f566621fccb9c583f0174433e5302d4d1af5160886dd5b64e32199b83216250ab36520720720e031335c66d474abe53195f9da6c376be75fd59cb1915352e377ff86ccb3c672c62706d7e8f5a75c</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><link href="/css/hbe.style.css" rel="stylesheet" type="text/css"><script data-swup-reload-script type="module" src="/js/plugins/hbe.js"></script><script data-swup-reload-script type="module">import {initHBE} from "/js/plugins/hbe.js";  console.log("hexo-blog-encrypt: loaded.");    initHBE();</script>]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="示例" scheme="https://jiang07shuai06.github.io/categories/%E7%A4%BA%E4%BE%8B/"/>
    
    
    <category term="测试" scheme="https://jiang07shuai06.github.io/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
</feed>
